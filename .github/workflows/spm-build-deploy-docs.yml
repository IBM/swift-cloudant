name: spm-build-deploy-docs

on:
  push:
    branches: ["docs"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  pages: write
  id-token: write
  contents: read
  
# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  build-docs:

    runs-on: macos-latest

    defaults:
      run:
        working-directory: ./

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build Docs
        run: |
          swift package \
            --allow-writing-to-directory ./docs \
            generate-documentation --target SwiftCloudant \
            --disable-indexing \
            --transform-for-static-hosting \
            --hosting-base-path swift-cloudant \
            --output-path ./docs
      
      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Fix permissions
        run: |
          chmod -v -R +rX "docs/" | while read line; do
          echo "::warning title=Invalid file permissions automatically fixed::$line"
          done

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./docs

  deploy-docs:
    runs-on: ubuntu-latest
    needs: build-docs

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

